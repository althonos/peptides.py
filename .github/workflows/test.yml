name: Test

on:
  - push
  - pull_request

jobs:

  test-linux:
    name: Test (Linux)
    runs-on: ubuntu-22.04
    env:
      OS: Linux
    strategy:
      matrix:
        include:
        - python-version: "3.7"
          python-release: v3.7
          python-impl: CPython
        - python-version: "3.8"
          python-release: v3.8
          python-impl: CPython
        - python-version: "3.9"
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: v3.10
          python-impl: CPython
        - python-version: "3.11"
          python-release: v3.11
          python-impl: CPython
        - python-version: "3.12"
          python-release: v3.12
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Install NumPy
      if: matrix.python-impl == 'CPython'
      run: python -m pip install -U numpy
    - name: Generate code for data tables
      run: python setup.py codegen --inplace
    - name: Test with coverage
      run: python -m coverage run -m unittest discover -vv
    - name: Upload to Codecov
      uses: codecov/codecov-action@v4
      with:
        flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  test-osx:
    name: Test (OSX)
    runs-on: macos-13
    env:
      OS: OSX
    strategy:
      matrix:
        include:
        - python-version: "3.7"
          python-release: v3.7
          python-impl: CPython
        - python-version: "3.8"
          python-release: v3.8
          python-impl: CPython
        - python-version: "3.9"
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: v3.10
          python-impl: CPython
        - python-version: "3.11"
          python-release: v3.11
          python-impl: CPython
        - python-version: "3.12"
          python-release: v3.12
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Install NumPy
      if: matrix.python-impl == 'CPython'
      run: python -m pip install -U numpy
    - name: Generate code for data tables
      run: python setup.py codegen --inplace
    - name: Test with coverage
      run: python -m coverage run -m unittest discover -vv
    - name: Upload to Codecov
      uses: codecov/codecov-action@v4
      with:
        flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        codecov_curl_args: "--globoff"

  wheel:
    runs-on: ubuntu-latest
    name: Build universal wheel
    needs:
    - test-osx
    - test-linux
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install build requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build wheel
      run: python setup.py bdist_wheel
    - name: Store built wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheels
        path: dist/*

  sdist:
    runs-on: ubuntu-latest
    name: Build source distribution
    needs:
    - test-osx
    - test-linux
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install build requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build wheel distribution
      run: python setup.py sdist
    - name: Store built wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    permissions:
      id-token: write
    needs:
    - sdist
    - wheel
    steps:
    - name: Download built distributions
      uses: actions/download-artifact@v4
      with:
        name: dist-sdist
        path: dist
        merge-multiple: true
    - name: Download built distributions
      uses: actions/download-artifact@v4
      with:
        name: dist-wheels
        path: dist
        merge-multiple: true
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    permissions:
      contents: write
    name: Release
    needs: upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.2.0
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
